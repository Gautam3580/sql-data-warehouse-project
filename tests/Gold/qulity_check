/*
===============================================================================================================
Script: Gold Quality Check.
===============================================================================================================
Purpose:
The purpose of this script is to prepare data for the final stage. The data is cleaned in this layer for the final 
layer and have uploaded only after approving all the checks; such as data discrepancies, data standardization and  
data accuracy.
For that have tested the data quality by runnig various scripts and have found no data discrepancies in the data.
--Run Tests Sucha as:
 -- Finding distinct values.
 -- Removed duplicates.
 -- Data standardization
===============================================================================================================
*/

select DISTINCT
    ci.cst_gndr,
    ca.gen
    from Silver.crm_cust_info ci
    LEFt JOIN Silver.erp_cust_az12 ca
    ON		ci.cst_key = ca.cid
    LEFT JOIN Silver.erp_loc_a101 la
    ON		ci.cst_key = la.cid;



select --DISTINCT
    ci.cst_gndr,
    ca.gen,
    CASE WHEN ci.cst_gndr != 'n/a' THEN ci.cst_gndr  -- CRM is the master for gender info.
	     ELSE COALESCE(ca.gen, 'n/a')
    END AS new_gendr
    from Silver.crm_cust_info ci
    LEFt JOIN Silver.erp_cust_az12 ca
    ON		ci.cst_key = ca.cid
    LEFT JOIN Silver.erp_loc_a101 la
    ON		ci.cst_key = la.cid

--Quality Check for Gold View

select distinct
gender
from gold.dim_customers;

select * from Gold.dim_customers;

-- Create Product Dimention 

select * from  Silver.crm_prod;

SELECT 
    t.product_id, 
    COUNT(*) AS product_count
FROM (
    SELECT
        ROW_NUMBER() OVER (ORDER BY pn.prd_start_dt, pn.prd_key) AS product_key,
        pn.prd_id AS product_id,
        pn.prd_key AS product_number,
        pn.prd_nm AS product_name,
        pn.cat_id AS category_id,
        pc.cat AS category,
        pc.subcat AS subcategory,
        pc.maintenance,
        pn.prd_cost AS product_cost,   
        pn.prd_line AS product_line,
        pn.prd_start_dt AS start_date
    FROM Silver.crm_prod pn
    LEFT JOIN Silver.erp_px_cat_g1v2 pc
        ON pn.cat_id = pc.id
    WHERE pn.prd_end_dt IS NULL   -- Removed historical data..we've only current data now.
) AS t
GROUP BY t.product_id
HAVING COUNT(*) > 1;


-- View
Select * from gold.dim_product;


Select order_date, COUNT(*)
From (

select 
    sd.sls_ord_num AS order_number,
    pr.product_key,
    cu.customer_key,
    sd.sls_order_dt AS order_date,
    sd.sls_ship_dt AS ship_date,
    sd.sls_due_dt AS due_date,
    sd.sls_sales AS sales_amount,
    sd.sls_quantity AS quantity,
    sd.sls_price As price
    from Silver.crm_sales_details as sd
    LEFT JOIN Gold.dim_product pr
    ON      sd.sls_prd_key = pr.product_number
    LEFT JOIN gold.dim_customers cu
    ON      sd.sls_cust_id = cu.customer_ID

    ) y
    Group By order_date
    HAVING Count(*) > 1

select * from gold.fact_sales f
    LEFT JOIN gold.dim_customers c
    ON c.customer_key = f.customer_key
    LEFT JOIN gold.dim_product p
    ON p.product_key = f.product_key
    Where p.product_key is null;
